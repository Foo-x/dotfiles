# use in your .bash_profile or .bashrc like below
# . /path/to/dotfiles/.aliases

alias sudo='sudo '
alias _='sudo '

# cd
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias .....='cd ../../../..'
alias doc='cd ~/Documents'
alias dl='cd ~/Downloads'
alias ws='cd ~/Documents/workspace'
alias cdg='cd $(git rev-parse --show-toplevel)'
function mkcd() { mkdir -p "$1" && cd "$1"; }
function cdh() {
  local dirnum
  dirs -v | sort -k 2 | uniq -f 1 | sort -n -k 1 | head -n $(( LINES - 3 ))
  read -p "select number: " dirnum
  if [ -z "$dirnum" ] ; then
    echo "$FUNCNAME: Abort." 1>&2
  elif ( echo $dirnum | egrep '^[[:digit:]]+$' > /dev/null ) ; then
    cd "$( echo ${DIRSTACK[$dirnum]} | sed -e "s;^~;$HOME;" )"
  else
    echo "$FUNCNAME: Wrong." 1>&2
  fi
}
function cdl() {
  local i dirnum
  declare -a dirlist=( $(echo {.,}?*/) )

  for i in "${!dirlist[@]}"
  do
    echo "$i  ${dirlist[$i]}"
  done

  read -p "select number: " dirnum
  if [ -z "$dirnum" ] ; then
    echo "$FUNCNAME: Abort." 1>&2
  elif ( echo $dirnum | egrep '^[[:digit:]]+$' > /dev/null ) ; then
    cd ${dirlist[$dirnum]}
  else
    echo "$FUNCNAME: Wrong." 1>&2
  fi
}
function cdm() {
  # ref: https://gist.github.com/matsub/8454ddda75bbe1039dc3af8d6638be60

  local pos=0 page_pos=0 list i input
  local height=$(($(tput lines) - 3))

  declare -a menu=($(echo {.,}?*/))
  local pages=$(((${#menu[@]} + $height - 1) / $height))

  # save top position
  printf "\e[s\e[m" >&2

  while true; do
    # move to top position
    printf "\e[u\e[m" >&2

    echo "pages: $(($page_pos + 1))/$pages"
    echo ""

    list=(${menu[@]:$(($page_pos * $height)):$height})
    tput ed

    for i in ${!list[@]};do
      if [ $pos = $i ]; then
        printf "\e[1;31m>\e[m \e[1;4m" >&2
      else
        printf "  " >&2
      fi
      printf "${list[$i]}\e[m\n" >&2
    done

    read -sn1 input
    if [ "$input" = $'\x1b' ]; then
      read -sn2 input
    fi
    case $input in
      "j"|$'\x5b\x42')
        if [ $pos -lt $((${#list[@]} - 1)) ]; then
          pos=$(($pos + 1))
        elif [ $pos = $((${#list[@]} - 1)) ] && [ $page_pos -lt $(($pages - 1)) ]; then
          # next page
          pos=0
          let page_pos++
        fi
        ;;
      "k"|$'\x5b\x41')
        if [ $pos -gt 0 ]; then
          pos=$(($pos - 1))
        elif [ $pos = 0 ] && [ $page_pos -gt 0 ]; then
          # previous page
          pos=$(($height - 1))
          let page_pos--
        fi
        ;;
      "h"|$'\x5b\x44')
        if [ $page_pos -gt 0 ]; then
          # previous page
          pos=0
          let page_pos--
        fi
        ;;
      "l"|$'\x5b\x43')
        if [ $page_pos -lt $(($pages - 1)) ]; then
          # next page
          pos=0
          let page_pos++
        fi
        ;;
      "")
        cd ${list[$pos]}
        return
        ;;
      "q")
        echo "Abort."
        return
        ;;
    esac
  done
}

# confirm
alias rm='rm -i'
alias cp='cp -i'
alias mv='mv -i'
alias ln='ln -i'

# override for convenience
if [ "$(uname)" = 'Darwin' ]; then
  alias ls='ls -FG'
else
  alias ls='ls -F --color=auto'
fi
alias ll='ls -lah'
alias mkdir='mkdir -p'
alias df='df -h'
alias du='du -h'
alias free='free -h'
alias grep='grep --color=auto -En'
alias cd='pushd > /dev/null'
alias dirs='dirs -v'

# shorten
alias g=git
alias h=history
alias j=jobs
alias vi=vim
alias md=mkdir
alias gr=grep
alias dirsc='dirs -c'

alias reload='. ~/.bash_profile; . ~/.bashrc; bind -f ~/.inputrc'

function open() {
  if which open &> /dev/null; then
    open "$@"
  elif which xdg-open &> /dev/null; then
    xdg-open "$@"
  elif which explorer &> /dev/null; then
    explorer "$@"
  fi
}

function open-http() {
  if which open &> /dev/null; then
    open http://$1
  elif which xdg-open &> /dev/null; then
    xdg-open http://$1
  elif which explorer &> /dev/null; then
    explorer http://$1
  fi
}

function open-https() {
  if which open &> /dev/null; then
    open https://$1
  elif which xdg-open &> /dev/null; then
    xdg-open https://$1
  elif which explorer &> /dev/null; then
    explorer https://$1
  fi
}
