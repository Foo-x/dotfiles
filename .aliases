shopt -s expand_aliases

alias sudo='sudo '
alias _='sudo '

# cd
alias ..='cd ..'
alias ...='cd ...'
alias doc='cd ~/Documents'
alias dl='cd ~/Downloads'
alias ws='cd ~/workspace'
alias dot='cd ~/.dotfiles'
alias cdg='cd $(git rev-parse --show-toplevel)'  # cd to toplevel of git repo
function mkcd() { mkdir -p "$1" && cd "$1"; }

# override for convenience
if [ "$(uname)" = 'Darwin' ]; then
  alias ls='ls -FG'
else
  alias ls='ls -F --color=auto'
fi
alias ll='ls -lahi --time-style=+%c'
alias mkdir='mkdir -p'
alias df='df -h'
alias du='du -h'
alias cp='cp -iav'
alias ln='ln -iv'
alias mv='mv -iv'
alias rm='rm -iv'
alias free='free -h'
alias grep='grep --color=auto -En'  # use regexp and show line numbers
alias dirs='dirs -v'

# shorten
alias g=git
alias h=history
alias j=jobs

if type vim &> /dev/null; then
  alias vi=vim
fi
if type nvim &> /dev/null; then
  alias vi=nvim
fi

alias md=mkdir
alias gr=grep
alias dirsc='dirs -c && pushd -n ${PWD} > /dev/null'
alias cpb='cp -b'
alias lnb='ln -b'
alias mvb='mv -b'
alias vis='vi -S'

# others
alias relogin='exec $SHELL -l'
alias osver='cat /etc/*release'
alias mirror='rsync --delete'
alias cctypes='echo "Conventional Commits"; echo; echo "
build		Changes that affect the build system or external dependencies (example scopes - gulp, broccoli, npm)
chore		Other changes that don'\''t modify src or test files
ci		Changes to our CI configuration files and scripts (example scopes - Travis, Circle, BrowserStack, SauceLabs)
docs		Documentation only changes
feat		A new feature
fix		A bug fix
perf		A code change that improves performance
refactor	A code change that neither fixes a bug nor adds a feature
revert		Reverts a previous commit
style		Changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc)
test		Adding missing tests or correcting existing tests
"'

# date
alias dt='date'

## ISO 8601
alias dti='date -I'
alias dtih='date -Ih'
alias dtim='date -Im'
alias dtis='date -Is'
alias dtin='date -In'

## RFC 3339
alias dtrd='date --rfc-3339=d'
alias dtrs='date --rfc-3339=s'
alias dtrn='date --rfc-3339=n'

## backup
alias dtbak='date +%Y%m%d_%H%M%S'

# nim
alias nimc='nim cpp -o:./a.out'
alias nimcr='nim cpp -o:./a.out -d:release --hints:off --verbosity:0'
alias nimr='nimc -r'
alias nimrr='nimcr -r'

# docker
alias d='docker'
alias da='docker attach'
alias db='docker build'
alias dbp='docker build --pull'
alias dco='docker container'
alias dcoi='docker container inspect'
alias dcok='docker container kill'
alias dcol='docker container ls'
alias dcola='docker container ls -a'
alias dcop='docker container prune'
alias dcor='docker container rm'
alias dcorv='docker container rm -v'
alias dcors='docker container restart'
alias dcos='docker container start'
alias dcost='docker container stop'
alias di='docker image'
alias dii='docker image inspect'
alias dip='docker image prune'
alias dir='docker image rm'
alias dis='docker images'
alias dp='docker ps'
alias dpa='docker ps -a'
alias dr='docker run'
alias drp='docker run --pull always'
alias dri='docker run -it'
alias drip='docker run -it --pull always'
alias drir='docker run -it --rm'
alias drirp='docker run -it --rm --pull always'
alias drr='docker run --rm'
alias drrp='docker run --rm --pull always'
alias dv='docker volume'
alias dvi='docker volume inspect'
alias dvl='docker volume ls'
alias dvp='docker volume prune'
alias dvr='docker volume rm'
alias dx='docker exec'
alias dxi='docker exec -it'
alias dc='docker compose'
alias dcb='docker compose build'
alias dcbp='docker compose build --pull'
alias dcd='docker compose down'
alias dcdv='docker compose down -v'
alias dcp='docker compose ps'
alias dcprs='docker ps --filter "label=com.docker.compose.project" -q | xargs docker inspect --format="{{index .Config.Labels \"com.docker.compose.project\"}}" | sort | uniq'
alias dcr='docker compose run'
alias dcu='docker compose up -d'
alias dcup='docker compose up -d --pull always'
alias dcub='docker compose up -d --build'
alias dcubp='docker compose up -d --build --pull always'
alias dcx='docker compose exec'
alias dn='docker network'
alias dnc='docker network connect'
alias dnd='docker network disconnect'
alias dni='docker network inspect'
alias dnl='docker network ls'
alias dnp='docker network prune'
alias dnr='docker network rm'
alias ds='docker stats'

# tmux
alias tm='tmux'
alias tma='tmux attach'
alias tmd='tmux detach'
alias tmkill='tmux kill-session'
alias tml='tmux ls'
alias tmn='tmux new'
alias tmnw='tmux neww'
alias tmr='tmux rename'
alias tmreload='tmux source-file ~/.tmux.conf'

# browse
alias al='cat ~/.dotfiles/.aliases{,_fzf} | $PAGER'
alias bashrc='$PAGER ~/.dotfiles/.bashrc'
alias bashrc_org='$PAGER ~/.bashrc'
alias inputrc='$PAGER ~/.inputrc'
alias vimrc='$PAGER ~/.vimrc'
alias vimkeymap='$PAGER ~/.dotfiles/.vim/keymap.vimrc'
alias tmal='alias | \grep "='\''tmux"'
alias tmconf='$PAGER ~/.tmux.conf'
alias dal='alias | \grep "='\''docker[^-]" | $PAGER'
alias dcal='alias | \grep "='\''docker compose" | $PAGER'
alias bdot='vi ~/.dotfiles'

function with_env() {
  (
    set -a
    . .env
    set +a
    "$@"
  )
}

function rand() {
  cat /dev/urandom | tr -dc 'a-zA-Z0-9+/=' | fold -w "${1:-10}" | head -n 1
}

function findsamefile() {
  find "$(findmnt -o TARGET -cenT "$1")" -mount -samefile "$1"
}

function out() {
  "$@" &> out
}
alias out='out '

function silent() {
  "$@" &> /dev/null
}
alias silent='silent '

function preview() {
  "$@" | less
}
alias preview='preview '

function color16() {
  echo " On White(47)     On Black(40)     On Default     Color Code"
  echo -e "\
  \033[47m\033[1;37m  White        \033[0m  \
  \033[40m\033[1;37m  White        \033[0m  \
  \033[1;37m  White        \033[0m\
    1;37\
  "
  echo -e "\
  \033[47m\033[37m  Light Gray   \033[0m  \
  \033[40m\033[37m  Light Gray   \033[0m  \
  \033[37m  Light Gray   \033[0m  \
  37\
  "
  echo -e "\
  \033[47m\033[1;30m  Gray         \033[0m  \
  \033[40m\033[1;30m  Gray         \033[0m  \
  \033[1;30m  Gray         \033[0m  \
  1;30\
  "
  echo -e "\
  \033[47m\033[30m  Black        \033[0m  \
  \033[40m\033[30m  Black        \033[0m  \
  \033[30m  Black        \033[0m  \
  30\
  "
  echo -e "\
  \033[47m\033[31m  Red          \033[0m  \
  \033[40m\033[31m  Red          \033[0m  \
  \033[31m  Red          \033[0m  \
  31\
  "
  echo -e "\
  \033[47m\033[1;31m  Light Red    \033[0m  \
  \033[40m\033[1;31m  Light Red    \033[0m  \
  \033[1;31m  Light Red    \033[0m  \
  1;31\
  "
  echo -e "\
  \033[47m\033[32m  Green        \033[0m  \
  \033[40m\033[32m  Green        \033[0m  \
  \033[32m  Green        \033[0m  \
  32\
  "
  echo -e "\
  \033[47m\033[1;32m  Light Green  \033[0m  \
  \033[40m\033[1;32m  Light Green  \033[0m  \
  \033[1;32m  Light Green  \033[0m  \
  1;32\
  "
  echo -e "\
  \033[47m\033[33m  Brown        \033[0m  \
  \033[40m\033[33m  Brown        \033[0m  \
  \033[33m  Brown        \033[0m  \
  33\
  "
  echo -e "\
  \033[47m\033[1;33m  Yellow       \033[0m  \
  \033[40m\033[1;33m  Yellow       \033[0m  \
  \033[1;33m  Yellow       \033[0m  \
  1;33\
  "
  echo -e "\
  \033[47m\033[34m  Blue         \033[0m  \
  \033[40m\033[34m  Blue         \033[0m  \
  \033[34m  Blue         \033[0m  \
  34\
  "
  echo -e "\
  \033[47m\033[1;34m  Light Blue   \033[0m  \
  \033[40m\033[1;34m  Light Blue   \033[0m  \
  \033[1;34m  Light Blue   \033[0m  \
  1;34\
  "
  echo -e "\
  \033[47m\033[35m  Purple       \033[0m  \
  \033[40m\033[35m  Purple       \033[0m  \
  \033[35m  Purple       \033[0m  \
  35\
  "
  echo -e "\
  \033[47m\033[1;35m  Pink         \033[0m  \
  \033[40m\033[1;35m  Pink         \033[0m  \
  \033[1;35m  Pink         \033[0m  \
  1;35\
  "
  echo -e "\
  \033[47m\033[36m  Cyan         \033[0m  \
  \033[40m\033[36m  Cyan         \033[0m  \
  \033[36m  Cyan         \033[0m  \
  36\
  "
  echo -e "\
  \033[47m\033[1;36m  Light Cyan   \033[0m  \
  \033[40m\033[1;36m  Light Cyan   \033[0m  \
  \033[1;36m  Light Cyan   \033[0m  \
  1;36\
  "
}

if type rsync &> /dev/null; then
  alias rsync='rsync -aPvh'
  alias rsyncb='rsync --backup --suffix=.`date +%Y%m%d_%H%M%S`'

  function incr_bak() {
    local base="$2"

    mkdir -p "${base}"

    local latest="../$(\ls ${base} | tail -n 1)"

    rsync --link-dest="${latest}" "$1" "${base}/$(date +%Y%m%d_%H%M%S)"
  }

  function incr_bak_from_remote() {
    # incr_bak_from_remote foo bar user@host -i baz.pem
    local base="$2" src="$3" auth="${@:4}"

    mkdir -p "${base}"

    local latest="../$(\ls ${base} | tail -n 1)"

    rsync --link-dest="${latest}" -e "ssh ${auth}" "${src}:$1" "${base}/$(date +%Y%m%d_%H%M%S)"
  }

  function incr_bak_to_remote() {
    # incr_bak_to_remote foo bar user@host -i baz.pem
    local base="$2" dest="$3" auth="${@:4}"

    ssh "${auth}" "${dest}" "mkdir -p ${base}"
    local latest="../$(ssh "${@:4}" "${dest}" "\ls ${base} | tail -n 1")"

    rsync --link-dest="${latest}" "$1" -e "ssh ${auth}" "${dest}:${base}/$(date +%Y%m%d_%H%M%S)"
  }
fi

if [[ "${WSL_DISTRO_NAME}" ]]; then
  alias hostip='\grep nameserver /etc/resolv.conf | cut -d" " -f2'
  alias cmdc='cmd.exe /c'
  alias mklink='cmd.exe /c mklink'

  function open() {
    wslview "$(wslpath -w "$1")"
  }

  function is_win_dir() {
    case $PWD/ in
      /mnt/*) return $(true);;
      *) return $(false);;
    esac
  }

  # use git.exe in win dir for performance
  function git() {
    if is_win_dir; then
      git.exe "$@"
    else
      /usr/bin/git "$@"
    fi
  }
fi
