[
  {
    "key": "ctrl+shift+right",
    "command": "workbench.action.terminal.focusNext",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+shift+left",
    "command": "workbench.action.terminal.focusPrevious",
    "when": "terminalFocus"
  },
  {
    "key": "n",
    "command": "explorer.newFile",
    "when": "explorerViewletFocus && !inputFocus"
  },
  {
    "key": "shift+n",
    "command": "explorer.newFolder",
    "when": "explorerViewletFocus && !inputFocus"
  },
  {
    "key": "ctrl+a",
    "command": "cursorLineStart",
    "when": "textInputFocus && vim.mode == 'Insert'"
  },
  {
    "key": "ctrl+e",
    "command": "-workbench.action.quickOpen"
  },
  {
    "key": "ctrl+e",
    "command": "workbench.action.quickOpen",
    "when": "!terminalFocus"
  },
  {
    "key": "ctrl+e",
    "command": "cursorLineEnd",
    "when": "textInputFocus && vim.mode == 'Insert'"
  },
  {
    "key": "alt+w",
    "command": "workbench.action.terminal.new",
    "when": "terminalFocus && !terminalEditorFocus"
  },
  {
    "key": "ctrl+shift+oem_1",
    "command": "workbench.action.terminal.new"
  },
  {
    "key": "ctrl+shift+oem_3",
    "command": "-workbench.action.terminal.new"
  },
  {
    "key": "ctrl+oem_1",
    "command": "workbench.action.terminal.toggleTerminal"
  },
  {
    "key": "ctrl+oem_3",
    "command": "-workbench.action.terminal.toggleTerminal"
  },
  {
    "key": "ctrl+alt+c",
    "command": "-rest-client.generate-codesnippet",
    "when": "editorTextFocus && editorLangId == 'http'"
  },
  {
    "key": "ctrl+alt+c",
    "command": "-rest-client.generate-codesnippet",
    "when": "editorTextFocus && editorLangId == 'plaintext'"
  },
  {
    "key": "alt+c",
    "command": "-workbench.action.terminal.toggleFindCaseSensitive",
    "when": "terminalFindFocused && terminalProcessSupported || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "alt+h",
    "command": "workbench.action.terminal.focusPrevious",
    "when": "terminalFocus"
  },
  {
    "key": "alt+l",
    "command": "workbench.action.terminal.focusNext",
    "when": "terminalFocus"
  },
  {
    "key": "alt+oem_5",
    "command": "workbench.action.terminal.split",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+g l",
    "command": "workbench.action.terminal.focusNextPane",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+g h",
    "command": "workbench.action.terminal.focusPreviousPane",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+g shift+h",
    "command": "workbench.action.terminal.resizePaneLeft",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+g shift+l",
    "command": "workbench.action.terminal.resizePaneRight",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+g shift+j",
    "command": "workbench.action.terminal.resizePaneDown",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+g shift+k",
    "command": "workbench.action.terminal.resizePaneUp",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "key": "shift+up",
    "command": "workbench.action.terminal.scrollUpPage",
    "when": "terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
  },
  {
    "key": "shift+down",
    "command": "workbench.action.terminal.scrollDownPage",
    "when": "terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
  },
  {
    "key": "ctrl+k l",
    "command": "workbench.action.compareEditor.focusPrimarySide",
    "when": "textCompareEditorVisible"
  },
  {
    "key": "ctrl+k h",
    "command": "workbench.action.compareEditor.focusSecondarySide",
    "when": "textCompareEditorVisible"
  },
  {
    "key": "ctrl+k j",
    "command": "workbench.action.editor.nextChange",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+f5",
    "command": "-workbench.action.editor.nextChange",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+k k",
    "command": "workbench.action.editor.previousChange",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+alt+f5",
    "command": "-workbench.action.editor.previousChange",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+k j",
    "command": "workbench.action.compareEditor.nextChange",
    "when": "textCompareEditorVisible"
  },
  {
    "key": "alt+f5",
    "command": "-workbench.action.compareEditor.nextChange",
    "when": "textCompareEditorVisible"
  },
  {
    "key": "ctrl+k k",
    "command": "workbench.action.compareEditor.previousChange",
    "when": "textCompareEditorVisible"
  },
  {
    "key": "shift+alt+f5",
    "command": "-workbench.action.compareEditor.previousChange",
    "when": "textCompareEditorVisible"
  },
  {
    "key": "ctrl+v",
    "command": "-workbench.action.terminal.paste",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+v",
    "command": "-workbench.action.terminal.sendSequence",
    "when": "terminalFocus && !accessibilityModeEnabled && terminalShellType == 'pwsh'"
  },
  {
    "key": "ctrl+m",
    "command": "-editor.action.toggleTabFocusMode"
  },
  {
    "key": "alt+j",
    "command": "cursorDown",
    "when": "textInputFocus"
  },
  {
    "key": "alt+h",
    "command": "cursorLeft",
    "when": "textInputFocus"
  },
  {
    "key": "alt+k",
    "command": "cursorUp",
    "when": "textInputFocus"
  },
  {
    "key": "alt+l",
    "command": "cursorRight",
    "when": "textInputFocus"
  },
  {
    "key": "alt+b",
    "command": "workbench.action.tasks.build"
  },
  {
    "key": "alt+t",
    "command": "workbench.action.tasks.test"
  },
  {
    "key": "ctrl+shift+c",
    "command": "workbench.action.toggleMaximizedPanel"
  },
  {
    "key": "ctrl+k a",
    "command": "testing.runAll"
  },
  {
    "key": "ctrl+oem_1 a",
    "command": "-testing.runAll"
  },
  {
    "key": "ctrl+s",
    "command": "searchEditorApplyChanges.apply",
    "when": "inSearchEditor"
  },
  {
    "key": "ctrl+k tab",
    "command": "type",
    "args": {
      "text": "\t"
    },
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+i",
    "command": "selectNextSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  {
    "key": "ctrl+shift+i",
    "command": "selectPrevSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  // quickOpen
  {
    "key": "ctrl+q",
    "command": "-workbench.action.quickOpenView"
  },
  {
    "key": "ctrl+q",
    "command": "workbench.action.quickOpenView",
    "when": "!terminalFocus && !inViewsPicker"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.action.quickOpenSelectNext",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.quickOpenSelectPrevious",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+p",
    "command": "workbench.action.quickOpenSelectNext",
    "when": "inFilesPicker && inQuickOpen"
  },
  {
    "key": "ctrl+shift+p",
    "command": "workbench.action.quickOpenSelectPrevious",
    "when": "inFilesPicker && inQuickOpen"
  },
  {
    "key": "ctrl+k shift+l",
    "command": "workbench.action.moveActiveEditorGroupRight"
  },
  {
    "key": "ctrl+k shift+j",
    "command": "workbench.action.moveActiveEditorGroupDown"
  },
  {
    "key": "ctrl+k shift+h",
    "command": "workbench.action.moveActiveEditorGroupLeft"
  },
  {
    "key": "ctrl+k shift+k",
    "command": "workbench.action.moveActiveEditorGroupUp"
  },
  {
    "key": "l",
    "command": "breadcrumbs.focusNext",
    "when": "breadcrumbsActive && breadcrumbsVisible"
  },
  {
    "key": "h",
    "command": "breadcrumbs.focusPrevious",
    "when": "breadcrumbsActive && breadcrumbsVisible"
  },
  {
    "key": "l",
    "command": "list.expand",
    "when": "listFocus && treeElementCanExpand && !inputFocus || listFocus && treeElementHasChild && !inputFocus"
  },
  {
    "key": "h",
    "command": "list.collapse",
    "when": "listFocus && treeElementCanCollapse && !inputFocus || listFocus && treeElementHasParent && !inputFocus"
  },
  {
    "key": "ctrl+b",
    "command": "-markdown.extension.editing.toggleBold",
    "when": "editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/"
  },
  {
    "key": "ctrl+w",
    "command": "-workbench.action.closeActiveEditor"
  },
  {
    "key": "ctrl+w c",
    "command": "workbench.action.closeActiveEditor"
  },
  {
    "key": "ctrl+w q",
    "command": "workbench.action.closeEditorsAndGroup"
  },
  {
    "key": "ctrl+w shift+oem_minus",
    "command": "workbench.action.splitEditorToBelowGroup"
  },
  {
    "key": "ctrl+w \\",
    "command": "workbench.action.splitEditorToRightGroup"
  },
  {
    "key": "ctrl+w h",
    "command": "workbench.action.focusLeftGroup"
  },
  {
    "key": "ctrl+w l",
    "command": "workbench.action.focusRightGroup"
  },
  {
    "key": "ctrl+w j",
    "command": "workbench.action.focusBelowGroup"
  },
  {
    "key": "ctrl+w k",
    "command": "workbench.action.focusAboveGroup"
  },
  {
    "key": "ctrl+w shift+h",
    "command": "workbench.action.moveEditorToLeftGroup"
  },
  {
    "key": "ctrl+w shift+l",
    "command": "workbench.action.moveEditorToRightGroup"
  },
  {
    "key": "ctrl+w shift+j",
    "command": "workbench.action.moveEditorToBelowGroup"
  },
  {
    "key": "ctrl+w shift+k",
    "command": "workbench.action.moveEditorToAboveGroup"
  },
  {
    "key": "ctrl+w m",
    "command": "workbench.action.maximizeEditor"
  },
  {
    "key": "ctrl+w =",
    "command": "workbench.action.evenEditorWidths"
  },
  {
    "key": "ctrl+k e",
    "command": "workbench.action.tasks.runTask",
    "args": "vim (WSL)"
  },
  {
    "key": "ctrl+k oem_4",
    "command": "search.action.focusQueryEditorWidget",
    "when": "inSearchEditor"
  },
  {
    "key": "ctrl+k oem_4",
    "command": "search.focus.previousInputBox",
    "when": "inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible && !searchInputBoxFocus"
  },
  {
    "key": "ctrl+k ctrl+p",
    "command": "workbench.action.showAllEditorsByMostRecentlyUsed"
  },
  {
    "key": "alt+w",
    "command": "-workbench.action.terminal.toggleFindWholeWord",
    "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  }
]
