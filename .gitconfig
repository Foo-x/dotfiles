# use in your .gitconfig like below
# [include]
# 	path = /path/to/dotfiles/.gitconfig

[color]
	ui = auto
[alias]
	# log
	l0 = log --oneline --all --decorate --graph               # 1行
	l1 = log --oneline --all --decorate --graph --name-status # 1行 + 変更ファイル
	l2 = log -p --decorate --all                              # 詳細

	a = add
	aa = add --all
	s = status -sb

	# branch
	b = branch
	ba = branch -a
	bm = branch -m
	bmg = branch --merged
	bd = branch -d
	bdd = branch -D
	co = checkout
	cb = checkout -b
	rb = rebase
	rbm = rebase master
	rbc = rebase --continue
	rba = rebase --abort
	rbs = rebase --skip
	rbi = rebase -i
	rbim = rebase -i master

	# commit
	c = commit
	cm = commit -m
	ca = commit --amend --no-edit
	ic = commit --allow-empty -m \"Initial Commit\"
	chp = cherry-pick

	# remote
	p = pull
	ps = push
	psf = push -f
	f = fetch
	rs = remote show origin
	rpo = remote prune origin
	cl = clone

	# reset
	re = reset
	res = reset --soft
	reh = reset --hard

	# diff
	d = diff
	dc = diff --cached
	da = diff @

	# stash
	ss = stash
	sl = stash list
	sa = stash apply
	sd = stash drop
	sp = stash pop
	save = !git stash && git stash apply

	alias = config --get-regexp alias.*

	# set upstream of current branch to the same name in origin
	sus = !git branch -u origin/`git symbolic-ref --short HEAD` `git symbolic-ref --short HEAD`

	# delete merged branch
	dmb = !git branch --merged | egrep -v '\\*|develop|master' | xargs git branch -d

	# pull and prune
	pp = "!f(){ \
		git checkout ${1:-master} && \
		git pull && \
		git remote prune origin && \
		git dmb; \
	};f"

	rbsq = "!f(){ git rebase -i ${1:-master} --autosquash; };f"
	rbsqc = "!f(){ git -c core.editor=: rebase -i ${1:-master} --autosquash; };f"

[push]
	default = current
[core]
	excludesfile = ~/.gitignore_global
[help]
	autocorrect = -1
