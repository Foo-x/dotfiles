[color]
    ui = auto
[alias]
    # log
    ## oneline
    l0 = log --oneline --decorate --graph
    l0a = log --oneline --all --decorate --graph

    ## oneline + changed files
    l1 = log --oneline --decorate --graph --name-status
    l1a = log --oneline --all --decorate --graph --name-status

    ## description
    l2 = log -p --decorate
    l2a = log -p --decorate --all

    # branch
    b = branch
    ba = branch -a
    bm = branch -m
    bmg = branch --merged
    bd = branch -d
    bdd = branch -D
    bv = branch -vv
    co = checkout
    cb = checkout -b
    rb = rebase
    rbm = rebase master
    rbc = rebase --continue
    rba = rebase --abort
    rbs = rebase --skip
    rbi = rebase -i
    rbim = rebase -i master
    sco = sparse-checkout
    scol = sparse-checkout list
    scos = sparse-checkout set --cone
    # show branches with relationship to upstream
    usi = !git for-each-ref --color --format='%(refname:short)^%(upstream:lstrip=2) %(color:blue)%(upstream:track)' refs/heads | column -t -s^

    # add
    a = add
    aa = add --all
    ai = add --interactive

    # commit
    c = commit
    cm = commit -m
    ca = commit --amend --no-edit
    ic = commit --allow-empty -m \"Initial Commit\"
    cf = commit --fixup
    chp = cherry-pick

    # remote
    p = pull
    ps = push
    psf = push --force-with-lease --force-if-includes
    psd = push --delete
    f = fetch
    rv = remote -vv
    ra = remote add
    rsu = remote set-url
    rs = remote show
    rso = remote show origin
    rp = remote prune
    rpo = remote prune origin
    cl = clone
    clp = clone --filter=blob:none --sparse
    fusi = !git fetch && git usi

    # reset
    re = reset
    res = reset --soft
    reh = reset --hard

    # diff
    d = diff
    dc = diff --cached
    da = diff @
    dm = diff --diff-filter=M   # modified
    dnm = diff --diff-filter=m  # not modified
    dt = difftool

    # stash
    ss = stash
    sl = stash list
    sa = stash apply
    sd = stash drop
    sp = stash pop
    ssa = !git stash && git stash apply

    # worktree
    wt = worktree
    wta = worktree add
    wtl = worktree list
    wtp = worktree prune
    wtr = worktree remove

    # submodule
    sub = submodule
    suba = submodule add --progress
    subu = submodule update --init --recursive --progress

    # bisect
    bi = bisect
    bis = bisect start
    bir = bisect run
    big = bisect good
    bib = bisect bad
    bil = bisect log
    bire = bisect reset

    # others
    s = status -sb

    ## show short commit hash
    rev = rev-parse --short @

    ## show aliases
    al = config --get-regexp alias.*

    ## set upstream of current branch to the same name in origin
    sus = !git branch -u origin/`git symbolic-ref --short HEAD` `git symbolic-ref --short HEAD`

    ## delete merged branch
    dmb = !git branch --merged | egrep -v '\\*|develop|master|main' | xargs git branch -d 2> /dev/null

    ## pull and prune
    pp = "!f(){ \
        git checkout ${1:-master} && \
        git pull && \
        git remote prune origin && \
        git dmb; \
    };f"

    ## check if can merge
    mc = "!f(){ \
        git checkout -q ${1:-master}; \
        git format-patch @..$(git rev-parse @{-1}) --stdout | git apply --check; \
        git checkout -q -; \
    };f"

    ## contribution stats by author
    ## takes options of git log
    contribution-stats = "!f(){ \
        git shortlog -sn | \
        cut -f2- | \
        xargs -I_ bash -c 'git log --author='\\''_'\\'' --pretty=tformat: --numstat "$@" | \
            \\grep -v "^-" | \
            awk '\\''BEGIN { add=0; remove=0 } { add+=$1; remove+=$2 } END { if (add != 0 || remove != 0) printf \"_\\t+%s\\t-%s\\n\", add, remove }'\\''' -- "$@" | \
        column -t -s$'\t'; \
    };f"

[push]
    default = current
[core]
    excludesfile = ~/.gitignore_global
    quotePath = false
[diff]
    tool = vscode
    wsErrorHighlight = all
[difftool "vscode"]
    cmd = code --wait --diff $LOCAL $REMOTE
[merge]
    ff = false
    tool = vscode
    autostash = true
[pull]
    ff = only
[mergetool "vscode"]
    cmd = code --wait $MERGED
[help]
    autocorrect = -1
[rebase]
    abbreviateCommands = true
    autosquash = true
    autostash = true
[submodule]
    recurse = true
