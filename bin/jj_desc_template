#!/usr/bin/env bash

cat <<.
JJ: Subject
JJ: 
JJ: <type>[(<scope>)][!]: <description>
JJ: 
JJ: build     Changes that affect the build system or external dependencies (example scopes - gulp, broccoli, npm)
JJ: chore     Other changes that don't modify src or test files
JJ: ci        Changes to our CI configuration files and scripts (example scopes - Travis, Circle, BrowserStack, SauceLabs)
JJ: docs      Documentation only changes
JJ: feat      A new feature
JJ: fix       A bug fix
JJ: perf      A code change that improves performance
JJ: refactor  A code change that neither fixes a bug nor adds a feature
JJ: revert    Reverts a previous commit
JJ: style     Changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc)
JJ: test      Adding missing tests or correcting existing tests
JJ: 
JJ: 50 char ------------------------------------>|
.

echo

cat <<.
JJ: Body
JJ: 
JJ: 72 char ---------------------------------------------------------->|
.

echo

cat <<.
JJ: Footer
JJ: 
JJ: BREAKING-CHANGE: <description>
JJ: Refs: <id>
JJ: Closes <id>
.

echo

echo "JJ: This commit contains the following changes:"
jj log -n1 --no-graph -T 'indent("JJ:     ", diff.summary())'

echo

echo "JJ: Logs"
echo "JJ: "
jj log --no-graph -T '"\n" ++ description.first_line()' --revisions 'ancestors(@-, 30)' | tail -n+2 | sed 's/^/JJ: /'

echo
echo

echo "JJ: Diff"
echo "JJ: ignore-rest"
jj log -n1 --no-graph -T 'diff.git()'
