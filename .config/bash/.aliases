shopt -s expand_aliases
# expand alias
alias sudo='sudo -E '
alias _='sudo '
alias watch='watch '
alias man='man '
alias xargs='xargs '

# cd
alias ..='cd ..'
alias ...='cd ...'
alias doc='cd ~/Documents'
alias dl='cd ~/Downloads'
alias ws='cd ~/workspace'
alias dot='cd ~/.dotfiles'
alias cdg='cd $(git rev-parse --show-toplevel)'  # cd to toplevel of git repo
function mkcd() { mkdir -p "$1" && cd "$1"; }

# override for convenience
if [ "$(uname)" = 'Darwin' ]; then
  alias ls='ls -FG'
else
  alias ls='ls -F --color=auto'
fi
alias la='ls -A'
alias ll='ls -lahi --time-style=+%c'
alias mkdir='mkdir -p'
alias df='df -h'
alias du='du -h'
alias cp='cp -iav'
alias ln='ln -iv'
alias mv='mv -iv'
alias rm='rm -iv'
alias free='free -h'
alias grep='grep --color=auto -nIE --exclude-dir=.git --exclude-dir=node_modules --exclude-dir=..'  # use regexp and show line numbers
alias rg="rg --hidden -g '!.git'"
alias fd="fd --hidden"
alias dirs='dirs -v'

# shorten
alias g=git
alias h=history
alias j=jobs

if type vim &> /dev/null; then
  alias vi=vim
fi
if type nvim &> /dev/null; then
  alias vi=nvim
  alias nview='nvim -R'
  alias view=nview
fi

alias md=mkdir
alias gr=grep
alias dirsc='dirs -c && pushd -n ${PWD} > /dev/null'
alias cpb='cp -b --suffix=.`date +%Y%m%d_%H%M%S`'
alias lnb='ln -b --suffix=.`date +%Y%m%d_%H%M%S`'
alias mvb='mv -b --suffix=.`date +%Y%m%d_%H%M%S`'
alias we='watchexec'
alias ai='aichat'

# others
alias relogin='exec $SHELL -l'
alias osver='cat /etc/*release'
alias mirror='rsync --delete'
alias chownme='chown $USER:$USER'
alias chownmeR='chown -R $USER:$USER'
alias cctypes='echo "Conventional Commits"; echo; echo "
build		Changes that affect the build system or external dependencies (example scopes - gulp, broccoli, npm)
chore		Other changes that don'\''t modify src or test files
ci		Changes to our CI configuration files and scripts (example scopes - Travis, Circle, BrowserStack, SauceLabs)
docs		Documentation only changes
feat		A new feature
fix		A bug fix
perf		A code change that improves performance
refactor	A code change that neither fixes a bug nor adds a feature
revert		Reverts a previous commit
style		Changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc)
test		Adding missing tests or correcting existing tests
"'
# not to use subshell to restore with tmux session
alias kmd='cd ${XDG_DATA_HOME}/kanbanmd; vi 1_backlog.md +"sp 4_blocked.md | vs 5_done.md | winc t | vs 2_ready.md | vs 3_doing.md" +"let t:autosave=v:true" +"doautocmd SessionLoadPost"; cd -'
alias kmdh='$PAGER ${XDG_DATA_HOME}/kanbanmd/README.md'
alias kmdn='(cd ${XDG_DATA_HOME}/kanbanmd && cat 2_ready.md <(echo) 3_doing.md | $PAGER)'
alias vis='touch Session.vim && vi +"doautocmd SessionLoadPost" -S'
alias vig='vi -c "DiffviewOpen" -c "on|1bw"'
alias viq='vi -c "cfile"'
alias vit='\rm startuptime.log &> /dev/null; vi --startuptime startuptime.log +"sl 300m | q" && vi startuptime.log && \rm startuptime.log &> /dev/null'
alias memo='vi +"call timer_start(&updatetime + 100, { -> execute('\''set buftype=nofile'\'') })"'
alias o='vi . +"vs"'

# date
alias dt='date'

## ISO 8601
alias dti='date -I'
alias dtih='date -Ih'
alias dtim='date -Im'
alias dtis='date -Is'
alias dtin='date -In'

## RFC 3339
alias dtrd='date --rfc-3339=d'
alias dtrs='date --rfc-3339=s'
alias dtrn='date --rfc-3339=n'

## backup
alias dtbak='date +%Y%m%d_%H%M%S'

# nim
alias nimc='nim cpp -o:./a.out'
alias nimcr='nim cpp -o:./a.out -d:release --hints:off --verbosity:0'
alias nimr='nimc -r'
alias nimrr='nimcr -r'

# docker
alias d='docker'
alias da='docker attach'
alias db='docker build'
alias dbp='docker build --pull'
alias dco='docker container'
alias dcoi='docker container inspect'
alias dcok='docker container kill'
alias dcol='docker container ls'
alias dcola='docker container ls -a'
alias dcop='docker container prune'
alias dcor='docker container rm'
alias dcorv='docker container rm -v'
alias dcors='docker container restart'
alias dcos='docker container start'
alias dcost='docker container stop'
alias di='docker image'
alias dii='docker image inspect'
alias dip='docker image prune'
alias dir='docker image rm'
alias dis='docker images'
alias dp='docker ps'
alias dpa='docker ps -a'
alias dr='docker run'
alias drp='docker run --pull always'
alias dri='docker run -it'
alias drip='docker run -it --pull always'
alias drir='docker run -it --rm'
alias drirp='docker run -it --rm --pull always'
alias drr='docker run --rm'
alias drrp='docker run --rm --pull always'
alias dv='docker volume'
alias dvi='docker volume inspect'
alias dvl='docker volume ls'
alias dvp='docker volume prune'
alias dvr='docker volume rm'
alias dx='docker exec'
alias dxi='docker exec -it'
alias dc='docker compose'
alias dcb='docker compose build'
alias dcbp='docker compose build --pull'
alias dcd='docker compose down'
alias dcdv='docker compose down -v'
alias dcdvi='docker compose down -v --rmi local'
alias dcp='docker compose ps'
alias dcprs='docker ps --filter "label=com.docker.compose.project" -q | xargs docker inspect --format="{{index .Config.Labels \"com.docker.compose.project\"}}" | sort | uniq'
alias dcr='docker compose run'
alias dcu='docker compose up -d'
alias dcup='docker compose up -d --pull always'
alias dcub='docker compose up -d --build'
alias dcubp='docker compose up -d --build --pull always'
alias dcx='docker compose exec'
alias dn='docker network'
alias dnc='docker network connect'
alias dnd='docker network disconnect'
alias dni='docker network inspect'
alias dnl='docker network ls'
alias dnp='docker network prune'
alias dnr='docker network rm'
alias ds='docker stats'

# tmux
alias tm='tmux'
alias tma='tmux attach'
alias tmd='tmux detach'
alias tmkill='tmux kill-session'
alias tml='tmux ls'
alias tmn='tmux new'
alias tmnw='tmux neww'
alias tmr='tmux rename'
alias tmrw='tmux renamew'
alias tmreload='tmux source-file $XDG_CONFIG_HOME/tmux/tmux.conf'

# terraform
alias tf='terraform'
alias tfi='terraform init'
alias tfv='terraform validate'
alias tfp='terraform plan'
alias tfa='terraform apply'
alias tfd='terraform destroy'

# browse
alias al='cat ~/.dotfiles/.config/bash/.aliases | $PAGER'
alias bashrc='$PAGER ~/.dotfiles/.bashrc'
alias bashrc_org='$PAGER ~/.bashrc'
alias inputrc='$PAGER ~/.inputrc'
alias tmal='alias | \grep "='\''tmux"'
alias tmconf='$PAGER $XDG_CONFIG_HOME/tmux/tmux.conf'
alias dal='alias | \grep "='\''docker[^-]" | $PAGER'
alias dcal='alias | \grep "='\''docker compose" | $PAGER'
alias bdot='vi ~/.dotfiles'

function with_env() {
  (
    set -a
    . .env
    set +a
    "$@"
  )
}
alias with_env='with_env '

function rand() {
  cat /dev/urandom | tr -dc 'a-zA-Z0-9+/=' | fold -w "${1:-10}" | head -n 1
}

function findsamefile() {
  find "$(findmnt -o TARGET -cenT "$1")" -mount -samefile "$1"
}

function out() {
  "$@" &> out
}
alias out='out '

function silent() {
  "$@" &> /dev/null
}
alias silent='silent '

function preview() {
  "$@" | less
}
alias preview='preview '

function fcd() {
  local dir

  dir=$(
    bfs d 2> /dev/null |
      fzf +m +s -q ${1:-''} --preview "ls -p --group-directories-first --color=always {} 2> /dev/null"
  )

  if [[ -n "$dir" ]]; then
    cd "$dir"
  fi
}

function check_truecolor() {
  for i in {1..80}; do
    ((r = 255 - (i * 255 / 80)))
    ((g = i < 40 ? i * 255 / 40 : 510 - i * 255 / 40))
    ((b = i * 255 / 80))
    printf "\e[48;2;%d;%d;%dm \e[m" $r $g $b
  done
  echo
}

function ansi_cht() {
  {
    echo '--- font style ---'
    printf 'increase intensity:                      \e[1m\\e[1m\e[0m\n'
    printf 'decrease intensity:                      \e[2m\\e[2m\e[0m\n'
    printf 'italic:                                  \e[3m\\e[3m\e[0m\n'
    printf 'underline:                               \e[4m\\e[4m\e[0m\n'
    printf 'slow blink:                              \e[5m\\e[5m\e[0m\n'
    printf 'rapid blink:                             \e[6m\\e[6m\e[0m\n'
    printf 'invert (swap foreground and background): \e[7m\\e[7m\e[0m\n'
    printf 'hide (same foreground and background):   \e[8m\\e[8m\e[0m\n'
    printf 'strike:                                  \e[9m\\e[9m\e[0m\n'

    echo
    echo '--- 4bit color ---'
    for i in {0..7}; do
      printf '\e[3%dm\\e[3%dm\e[0m ' $i $i
      printf '\e[9%dm\\e[9%dm\e[0m\n' $i $i
    done

    echo
    echo '--- 8bit color ---'
    for i in {0..15}; do
      for j in {0..15}; do
        ((c = i * 16 + j))
        printf '\e[38;5;%dm\\e[38;5;%03dm\e[0m ' $c $c
      done
      echo
    done

    echo
    echo '--- 24bit color ---'
    echo 'too many colors to show all ￣\_(ツ)_/￣'
    printf '\e[38;2;135;175;135m\\e[38;2;135;175;135m\e[0m\n'
    printf '\e[38;2;175;175;135m\\e[38;2;175;175;135m\e[0m\n'
    printf '\e[38;2;135;175;175m\\e[38;2;135;175;175m\e[0m\n'
    printf '\e[38;2;175;135;175m\\e[38;2;175;135;175m\e[0m\n'

    echo
    echo 'reset: \e[0m'
  } | less -R
}

if type rsync &> /dev/null; then
  alias rsync='rsync -aPvh'
  alias rsyncb='rsync --backup --suffix=.`date +%Y%m%d_%H%M%S`'

  function incr_bak() {
    local base="$2"

    mkdir -p "${base}"

    local latest="../$(\ls ${base} | tail -n 1)"

    rsync --link-dest="${latest}" "$1" "${base}/$(date +%Y%m%d_%H%M%S)"
  }

  function incr_bak_from_remote() {
    # incr_bak_from_remote foo bar user@host -i baz.pem
    local base="$2" src="$3" auth="${@:4}"

    mkdir -p "${base}"

    local latest="../$(\ls ${base} | tail -n 1)"

    rsync --link-dest="${latest}" -e "ssh ${auth}" "${src}:$1" "${base}/$(date +%Y%m%d_%H%M%S)"
  }

  function incr_bak_to_remote() {
    # incr_bak_to_remote foo bar user@host -i baz.pem
    local base="$2" dest="$3" auth="${@:4}"

    ssh "${auth}" "${dest}" "mkdir -p ${base}"
    local latest="../$(ssh "${@:4}" "${dest}" "\ls ${base} | tail -n 1")"

    rsync --link-dest="${latest}" "$1" -e "ssh ${auth}" "${dest}:${base}/$(date +%Y%m%d_%H%M%S)"
  }
fi

if type devcontainer &> /dev/null; then
  alias devc=devcontainer
  alias devcu='devcontainer up --workspace-folder .'
  alias devcx='devcontainer exec --workspace-folder .'
fi

if [[ "${WSL_DISTRO_NAME}" ]]; then
  alias hostip='\grep nameserver /etc/resolv.conf | cut -d" " -f2'
  alias cmdc='cmd.exe /c'
  alias mklink='cmd.exe /c mklink'
  alias pbcopy="iconv -t utf16 | tail -c +3 | clip.exe"
  alias clip=pbcopy
  alias pbpaste="powershell.exe -command '[Console]::OutputEncoding = [System.Text.Encoding]::UTF8; Get-Clipboard'"

  function open() {
    if [ -e "$1" ]; then
      wslview "$(wslpath -w "$1")"
    else
      wslview "$1"
    fi
  }

  function is_win_dir() {
    case $PWD/ in
      /mnt/*) return $(true);;
      *) return $(false);;
    esac
  }
fi
