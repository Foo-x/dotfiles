let $XDG_CONFIG_HOME=get(environ(), 'XDG_CONFIG_HOME', $HOME . '/.config')
let $XDG_CACHE_HOME=get(environ(), 'XDG_CACHE_HOME', $HOME . '/.cache')
let $XDG_DATA_HOME=get(environ(), 'XDG_DATA_HOME', $HOME . '/.local/share')
let $XDG_STATE_HOME=get(environ(), 'XDG_STATE_HOME', $HOME . '/.local/state')

set runtimepath^=$XDG_CONFIG_HOME/vim
set runtimepath+=$XDG_DATA_HOME/vim
set runtimepath+=$XDG_CONFIG_HOME/vim/after
set packpath^=$XDG_DATA_HOME/vim,$XDG_CONFIG_HOME/vim
set packpath+=$XDG_CONFIG_HOME/vim/after,$XDG_DATA_HOME/vim/after

set backspace=indent,eol,start
set encoding=utf-8
set cindent
set shiftwidth=2
set tabstop=2
set expandtab
set noerrorbells
set visualbell t_vb=
set runtimepath+=$HOME/.vim
set noswapfile
set wildmenu
set wildmode=list:longest
set showtabline=2
set confirm
set hidden
set splitbelow
set splitright
set formatoptions+=M
set matchpairs+=<:>
set scrolloff=5
set sidescrolloff=10
set shortmess+=FI
set shortmess-=S
set mouse=
set updatetime=100
set diffopt+=algorithm:histogram,indent-heuristic
set spelllang=en,cjk
set helplang=en,ja
set errorformat+=%-G#q#%.%#
set errorformat+=%f%*[^[:fname:]]%l\ %m
set errorformat+=%f%*[^[:fname:]]%l
set errorformat+=%f
set errorformat+=%-G%.%#
set foldminlines=3
set nofoldenable
set autoread
set viminfo+='10000
set viminfo-='100
set foldmethod=indent
if has('nvim')
  set foldexpr=nvim_treesitter#foldexpr()
  set foldcolumn=auto
  set signcolumn=yes:2
  set termguicolors
  set laststatus=3
else
  set foldcolumn=1
  set signcolumn=yes
  set viminfofile=$XDG_CACHE_HOME/vim/viminfo
  set laststatus=2
endif

if has('nvim-0.8')
  set exrc
endif

" show invisible chars
set lcs=tab:▸\ ,trail:·,nbsp:_,extends:»,precedes:«
set list

runtime! *.vimrc

" finish on vim-tiny
if !1 | finish | endif

call mkdir($XDG_DATA_HOME."/vim/spell", 'p')
set viewdir=$XDG_DATA_HOME/vim/view | call mkdir(&viewdir, 'p')

set backupdir=$XDG_CACHE_HOME/vim/backup | call mkdir(&backupdir, 'p')
set directory=$XDG_CACHE_HOME/vim/swap   | call mkdir(&directory, 'p')
set undodir=$XDG_CACHE_HOME/vim/undo     | call mkdir(&undodir,   'p')

syntax on

" cursor shape
let &t_ti.="\e[1 q"
let &t_SI.="\e[5 q"
let &t_EI.="\e[1 q"
let &t_te.="\e[0 q"

" load bash alias
let $BASH_ENV="$HOME/.dotfiles/.config/bash/.aliases"

" autocmd
augroup SessionLoad
  autocmd!
  let g:save_session = v:false
  " save a session every 1 min
  autocmd SessionLoadPost * if !g:save_session | let g:save_session = v:true | call timer_start(60 * 1000, { t -> execute('mks!') }, { 'repeat': -1 }) | endif
  autocmd VimLeave * if g:save_session | mks! | endif
augroup END
augroup GitGutter
  autocmd!
  autocmd VimEnter * GitGutterLineNrHighlightsEnable
augroup END

augroup Fold
  autocmd!
  autocmd FileType vim setlocal foldmethod=marker
augroup END
augroup AutoOpenQuickFixWindow
  autocmd!
  autocmd QuickFixCmdPost * cw
augroup END
augroup AutoRead
  autocmd!
  autocmd CursorHold * silent! checktime
augroup END
augroup CursorLine
  autocmd!
  autocmd VimEnter,WinEnter,BufWinEnter * setlocal cursorline
  autocmd WinLeave * setlocal nocursorline
augroup END
augroup CmdWin
  autocmd!
  autocmd CmdwinEnter * setlocal nonumber
  autocmd CmdwinEnter * setlocal signcolumn=no
  autocmd CmdwinEnter : g/\v^q%[a!]$/d
  autocmd CmdwinEnter : g/\v^w%[qa!]$/d
  autocmd CmdWinEnter * nnoremap <buffer> q <Cmd>q<CR>
augroup END

let test#strategy = 'toggleterm'
